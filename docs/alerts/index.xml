<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZAP Alert Details on OWASP ZAP</title>
    <link>/docs/alerts/</link>
    <description>Recent content in ZAP Alert Details on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Nov 2020 15:05:54 +0000</lastBuildDate><atom:link href="/docs/alerts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apache Range Header DoS (CVE-2011-3192)</title>
      <link>/docs/alerts/10053/</link>
      <pubDate>Mon, 02 Nov 2020 15:05:54 +0000</pubDate>
      
      <guid>/docs/alerts/10053/</guid>
      <description>The byterange filter in earlier versions of the Apache HTTP Server allows remote attackers to cause a denial of service (memory and CPU exhaustion) via a Range request header that identifies multiple overlapping ranges. This issue was exploited in the wild in August 2011.
Deprecated: 2020-06-13 Produced too many false positives and is no longer relevant.</description>
    </item>
    
    <item>
      <title>Insecure Component</title>
      <link>/docs/alerts/10046/</link>
      <pubDate>Fri, 30 Oct 2020 12:12:42 +0000</pubDate>
      
      <guid>/docs/alerts/10046/</guid>
      <description>Based on passive analysis of the response, insecure component {0} {1} appears to be in use. The highest noted CVSS rating for this product version is {2}. In total, {3} vulnerabilities were noted. Some Linux distributions such as Red Hat employ the practice of retaining old version numbers when security fixes are &amp;ldquo;backported&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Web Browser XSS Protection Not Enabled</title>
      <link>/docs/alerts/10016/</link>
      <pubDate>Fri, 30 Oct 2020 12:12:42 +0000</pubDate>
      
      <guid>/docs/alerts/10016/</guid>
      <description>Web Browser XSS Protection is not enabled, or is disabled by the configuration of the &amp;lsquo;X-XSS-Protection&amp;rsquo; HTTP response header on the web server
Deprecated: 2020-02-11 No longer widely supported by browsers.</description>
    </item>
    
    <item>
      <title>.env Information Leak</title>
      <link>/docs/alerts/40034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40034/</guid>
      <description>One or more .env files seems to have been located on the server. These files often expose infrastructure or administrative account credentials, API or APP keys, or other sensitive configuration information.</description>
    </item>
    
    <item>
      <title>.htaccess Information Leak</title>
      <link>/docs/alerts/40032/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40032/</guid>
      <description>htaccess files can be used to alter the configuration of the Apache Web Server software to enable/disable additional functionality and features that the Apache Web Server software has to offer.</description>
    </item>
    
    <item>
      <title>Absence of Anti-CSRF Tokens</title>
      <link>/docs/alerts/10202/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10202/</guid>
      <description>A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way.</description>
    </item>
    
    <item>
      <title>Advanced SQL Injection</title>
      <link>/docs/alerts/90018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90018/</guid>
      <description>A SQL injection may be possible using the attached payload</description>
    </item>
    
    <item>
      <title>Anti-clickjacking Header</title>
      <link>/docs/alerts/10020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Anti-CSRF Tokens Check</title>
      <link>/docs/alerts/20012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20012/</guid>
      <description>A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way.</description>
    </item>
    
    <item>
      <title>Application Error Disclosure</title>
      <link>/docs/alerts/90022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90022/</guid>
      <description>This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.</description>
    </item>
    
    <item>
      <title>Application Error Disclosure via WebSockets</title>
      <link>/docs/alerts/110001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/110001/</guid>
      <description>This payload contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application.</description>
    </item>
    
    <item>
      <title>Backup File Disclosure</title>
      <link>/docs/alerts/10095/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10095/</guid>
      <description>A backup of the file was disclosed by the web server</description>
    </item>
    
    <item>
      <title>Base64 Disclosure</title>
      <link>/docs/alerts/10094/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10094/</guid>
      <description>Base64 encoded data was disclosed by the application/web server. Note: in the interests of performance not all base64 strings in the response were analyzed individually, the entire response should be looked at by the analyst/security team/developer(s).</description>
    </item>
    
    <item>
      <title>Base64 Disclosure in WebSocket message</title>
      <link>/docs/alerts/110002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/110002/</guid>
      <description>A Base64-encoded string has been found in the websocket incoming message. Base64-encoded data may contain sensitive information such as usernames, passwords or cookies which should be further inspected. Decoded evidence: example.</description>
    </item>
    
    <item>
      <title>Big Redirect Detected (Potential Sensitive Information Leak)</title>
      <link>/docs/alerts/10044/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10044/</guid>
      <description>The server has responded with a redirect that seems to provide a large response. This may indicate that although the server sent a redirect it also responded with body content (which may include sensitive details, PII, etc.).</description>
    </item>
    
    <item>
      <title>Buffer Overflow</title>
      <link>/docs/alerts/30001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/30001/</guid>
      <description>Buffer overflow errors are characterized by the overwriting of memory spaces of the background web process, which should have never been modified intentionally or unintentionally. Overwriting values of the IP (Instruction Pointer), BP (Base Pointer) and other registers causes exceptions, segmentation faults, and other process errors to occur. Usually these errors end execution of the application in an unexpected way.</description>
    </item>
    
    <item>
      <title>Bypassing 403</title>
      <link>/docs/alerts/40038/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40038/</guid>
      <description>Bypassing 403 endpoints may be possible, the scan rule sent a payload that caused the response to be accessible (status code 200).</description>
    </item>
    
    <item>
      <title>Charset Mismatch</title>
      <link>/docs/alerts/90011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90011/</guid>
      <description>This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there&amp;rsquo;s a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content&amp;rsquo;s correct character set.</description>
    </item>
    
    <item>
      <title>Cloud Metadata Potentially Exposed</title>
      <link>/docs/alerts/90034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90034/</guid>
      <description>The Cloud Metadata Attack attempts to abuse a misconfigured NGINX server in order to access the instance metadata maintained by cloud service providers such as AWS, GCP and Azure. All of these providers provide metadata via an internal unroutable IP address &amp;lsquo;169.254.169.254&amp;rsquo; - this can be exposed by incorrectly configured NGINX servers and accessed by using this IP address in the Host header field.</description>
    </item>
    
    <item>
      <title>Content Cacheability</title>
      <link>/docs/alerts/10049/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10049/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Content Security Policy (CSP) Header Not Set</title>
      <link>/docs/alerts/10038/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10038/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page — covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</description>
    </item>
    
    <item>
      <title>Content-Type Header Missing</title>
      <link>/docs/alerts/10019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10019/</guid>
      <description>The Content-Type header was either missing or empty.</description>
    </item>
    
    <item>
      <title>Cookie No HttpOnly Flag</title>
      <link>/docs/alerts/10010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10010/</guid>
      <description>A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.</description>
    </item>
    
    <item>
      <title>Cookie Poisoning</title>
      <link>/docs/alerts/10029/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10029/</guid>
      <description>This check looks at user-supplied input in query string parameters and POST data to identify where cookie parameters might be controlled. This is called a cookie poisoning attack, and becomes exploitable when an attacker can manipulate the cookie in various ways. In some cases this will not be exploitable, however, allowing URL parameters to set cookie values is generally considered a bug.</description>
    </item>
    
    <item>
      <title>Cookie Slack Detector</title>
      <link>/docs/alerts/90027/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90027/</guid>
      <description>Repeated GET requests: drop a different cookie each time, followed by normal request with all cookies to stabilize session, compare responses against original baseline GET. This can reveal areas where cookie based authentication/attributes are not actually enforced.</description>
    </item>
    
    <item>
      <title>Cookie without SameSite Attribute</title>
      <link>/docs/alerts/10054/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10054/</guid>
      <description>A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a &amp;lsquo;cross-site&amp;rsquo; request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.</description>
    </item>
    
    <item>
      <title>Cookie Without Secure Flag</title>
      <link>/docs/alerts/10011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10011/</guid>
      <description>A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.</description>
    </item>
    
    <item>
      <title>CORS Header</title>
      <link>/docs/alerts/40040-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40040-1/</guid>
      <description>Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any other origins (domain, scheme, or port) than its own from which a browser should permit loading of resources. It relaxes the Same-Origin Policy (SOP).</description>
    </item>
    
    <item>
      <title>CORS Header</title>
      <link>/docs/alerts/40040/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40040/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CORS Misconfiguration</title>
      <link>/docs/alerts/40040-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40040-2/</guid>
      <description>This CORS misconfiguration could allow an attacker to perform AJAX queries to the vulnerable website from a malicious page loaded by the victim&amp;rsquo;s user agent. In order to perform authenticated AJAX queries, the server must specify the header &amp;ldquo;Access-Control-Allow-Credentials: true&amp;rdquo; and the &amp;ldquo;Access-Control-Allow-Origin&amp;rdquo; header must be set to null or the malicious page&amp;rsquo;s domain.</description>
    </item>
    
    <item>
      <title>CORS Misconfiguration</title>
      <link>/docs/alerts/40040-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40040-3/</guid>
      <description>This CORS misconfiguration could allow an attacker to perform AJAX queries to the vulnerable website from a malicious page loaded by the victim&amp;rsquo;s user agent. In order to perform authenticated AJAX queries, the server must specify the header &amp;ldquo;Access-Control-Allow-Credentials: true&amp;rdquo; and the &amp;ldquo;Access-Control-Allow-Origin&amp;rdquo; header must be set to null or the malicious page&amp;rsquo;s domain.</description>
    </item>
    
    <item>
      <title>CRLF Injection</title>
      <link>/docs/alerts/40003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40003/</guid>
      <description>Cookie can be set via CRLF injection. It may also be possible to set arbitrary HTTP response headers. In addition, by carefully crafting the injected response using cross-site script, cache poisoning vulnerability may also exist.</description>
    </item>
    
    <item>
      <title>Cross Site Scripting (DOM Based)</title>
      <link>/docs/alerts/40026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40026/</guid>
      <description>Cross-site Scripting (XSS) is an attack technique that involves echoing attacker-supplied code into a user&amp;rsquo;s browser instance. A browser instance can be a standard web browser client, or a browser object embedded in a software product such as the browser within WinAmp, an RSS reader, or an email client.</description>
    </item>
    
    <item>
      <title>Cross Site Scripting (Persistent)</title>
      <link>/docs/alerts/40014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40014/</guid>
      <description>Cross-site Scripting (XSS) is an attack technique that involves echoing attacker-supplied code into a user&amp;rsquo;s browser instance. A browser instance can be a standard web browser client, or a browser object embedded in a software product such as the browser within WinAmp, an RSS reader, or an email client.</description>
    </item>
    
    <item>
      <title>Cross Site Scripting (Persistent) - Prime</title>
      <link>/docs/alerts/40016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40016/</guid>
      <description>N/A</description>
    </item>
    
    <item>
      <title>Cross Site Scripting (Persistent) - Spider</title>
      <link>/docs/alerts/40017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40017/</guid>
      <description>N/A</description>
    </item>
    
    <item>
      <title>Cross Site Scripting (Reflected)</title>
      <link>/docs/alerts/40012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40012/</guid>
      <description>Cross-site Scripting (XSS) is an attack technique that involves echoing attacker-supplied code into a user&amp;rsquo;s browser instance. A browser instance can be a standard web browser client, or a browser object embedded in a software product such as the browser within WinAmp, an RSS reader, or an email client.</description>
    </item>
    
    <item>
      <title>Cross-Domain JavaScript Source File Inclusion</title>
      <link>/docs/alerts/10017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10017/</guid>
      <description>The page includes one or more script files from a third-party domain.</description>
    </item>
    
    <item>
      <title>Cross-Domain Misconfiguration</title>
      <link>/docs/alerts/10098/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10098/</guid>
      <description>Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server</description>
    </item>
    
    <item>
      <title>Cross-Domain Misconfiguration</title>
      <link>/docs/alerts/20016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20016/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CSP</title>
      <link>/docs/alerts/10055/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CSP: Header &amp; Meta</title>
      <link>/docs/alerts/10055-12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-12/</guid>
      <description>The message contained both CSP specified via header and via Meta tag. It was not possible to union these policies in order to perform an analysis. Therefore, they have been evaluated individually.</description>
    </item>
    
    <item>
      <title>CSP: Malformed Policy (Non-ASCII)</title>
      <link>/docs/alerts/10055-9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-9/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: Meta Policy Invalid Directive</title>
      <link>/docs/alerts/10055-11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-11/</guid>
      <description>The policy specified via meta element contains either or both the sandbox or frame-ancestors directive, which are not permitted inside meta CSP definitions.</description>
    </item>
    
    <item>
      <title>CSP: Notices</title>
      <link>/docs/alerts/10055-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-3/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: script-src unsafe-eval</title>
      <link>/docs/alerts/10055-10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-10/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: script-src unsafe-hashes</title>
      <link>/docs/alerts/10055-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-7/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: script-src unsafe-inline</title>
      <link>/docs/alerts/10055-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-5/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: style-src unsafe-hashes</title>
      <link>/docs/alerts/10055-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-8/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: style-src unsafe-inline</title>
      <link>/docs/alerts/10055-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-6/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: Wildcard Directive</title>
      <link>/docs/alerts/10055-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-4/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: X-Content-Security-Policy</title>
      <link>/docs/alerts/10055-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-1/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: X-WebKit-CSP</title>
      <link>/docs/alerts/10055-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-2/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>Dangerous JS Functions</title>
      <link>/docs/alerts/10110/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10110/</guid>
      <description>A dangerous JS function seems to be in use that would leave the site vulnerable.</description>
    </item>
    
    <item>
      <title>Deprecated Feature Policy Header Set</title>
      <link>/docs/alerts/10063-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10063-2/</guid>
      <description>The header has now been renamed to Permissions-Policy.</description>
    </item>
    
    <item>
      <title>Directory Browsing</title>
      <link>/docs/alerts/0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/0/</guid>
      <description>It is possible to view the directory listing. Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.</description>
    </item>
    
    <item>
      <title>Directory Browsing</title>
      <link>/docs/alerts/10033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10033/</guid>
      <description>It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files , backup source files, etc., which be accessed to reveal sensitive information.</description>
    </item>
    
    <item>
      <title>ELMAH Information Leak</title>
      <link>/docs/alerts/40028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40028/</guid>
      <description>The Error Logging Modules and Handlers (ELMAH [elmah.axd]) HTTP Module was found to be available. This module can leak a significant amount of valuable information.</description>
    </item>
    
    <item>
      <title>Email address found in WebSocket message</title>
      <link>/docs/alerts/110004/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/110004/</guid>
      <description>An email address was found in a WebSocket Message.</description>
    </item>
    
    <item>
      <title>Emails Found in the Viewstate</title>
      <link>/docs/alerts/10032-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-2/</guid>
      <description>The following emails were found being serialized in the viewstate field:</description>
    </item>
    
    <item>
      <title>Exponential Entity Expansion (Billion Laughs Attack)</title>
      <link>/docs/alerts/40044/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40044/</guid>
      <description>An exponential entity expansion, or &amp;ldquo;billion laughs&amp;rdquo; attack is a type of denial-of-service (DoS) attack. It is aimed at parsers of markup languages like XML or YAML that allow macro expansions.</description>
    </item>
    
    <item>
      <title>Expression Language Injection</title>
      <link>/docs/alerts/90025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90025/</guid>
      <description>The software constructs all or part of an expression language (EL) statement in a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed. In certain versions of Spring 3.</description>
    </item>
    
    <item>
      <title>External Redirect</title>
      <link>/docs/alerts/20019-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20019-1/</guid>
      <description>URL redirectors represent common functionality employed by web sites to forward an incoming request to an alternate resource. This can be done for a variety of reasons and is often done to allow resources to be moved within the directory structure and to avoid breaking functionality for users that request the resource at its previous location.</description>
    </item>
    
    <item>
      <title>External Redirect</title>
      <link>/docs/alerts/20019-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20019-2/</guid>
      <description>URL redirectors represent common functionality employed by web sites to forward an incoming request to an alternate resource. This can be done for a variety of reasons and is often done to allow resources to be moved within the directory structure and to avoid breaking functionality for users that request the resource at its previous location.</description>
    </item>
    
    <item>
      <title>External Redirect</title>
      <link>/docs/alerts/20019-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20019-3/</guid>
      <description>URL redirectors represent common functionality employed by web sites to forward an incoming request to an alternate resource. This can be done for a variety of reasons and is often done to allow resources to be moved within the directory structure and to avoid breaking functionality for users that request the resource at its previous location.</description>
    </item>
    
    <item>
      <title>External Redirect</title>
      <link>/docs/alerts/20019-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20019-4/</guid>
      <description>URL redirectors represent common functionality employed by web sites to forward an incoming request to an alternate resource. This can be done for a variety of reasons and is often done to allow resources to be moved within the directory structure and to avoid breaking functionality for users that request the resource at its previous location.</description>
    </item>
    
    <item>
      <title>External Redirect</title>
      <link>/docs/alerts/20019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20019/</guid>
      <description></description>
    </item>
    
    <item>
      <title>File Upload</title>
      <link>/docs/alerts/40041/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40041/</guid>
      <description>File Upload scan rule is used to scan the vulnerabilities in the File Upload functionality of web applications.</description>
    </item>
    
    <item>
      <title>Format String Error</title>
      <link>/docs/alerts/30002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/30002/</guid>
      <description>A Format String error occurs when the submitted data of an input string is evaluated as a command by the application.</description>
    </item>
    
    <item>
      <title>Generic Padding Oracle</title>
      <link>/docs/alerts/90024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90024/</guid>
      <description>By manipulating the padding on an encrypted string, an attacker is able to generate an error message that indicates a likely &amp;lsquo;padding oracle&amp;rsquo; vulnerability. Such a vulnerability can affect any application or framework that uses encryption improperly, such as some versions of ASP.net, Java Server Faces, and Mono. An attacker may exploit this issue to decrypt data and recover encryption keys, potentially viewing and modifying confidential data.</description>
    </item>
    
    <item>
      <title>GET for POST</title>
      <link>/docs/alerts/10058/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10058/</guid>
      <description>A request that was originally observed as a POST was also accepted as a GET. This issue does not represent a security weakness unto itself, however, it may facilitate simplification of other attacks. For example if the original POST is subject to Cross-Site Scripting (XSS), then this finding may indicate that a simplified (GET based) XSS may also be possible.</description>
    </item>
    
    <item>
      <title>Hash Disclosure</title>
      <link>/docs/alerts/10097/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10097/</guid>
      <description>A hash was disclosed by the web server.</description>
    </item>
    
    <item>
      <title>Heartbleed OpenSSL Vulnerability</title>
      <link>/docs/alerts/20015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20015/</guid>
      <description>The TLS implementation in OpenSSL 1.0.1 before 1.0.1g does not properly handle Heartbeat Extension packets, which allows remote attackers to obtain sensitive information from process memory via crafted packets that trigger a buffer over-read, potentially disclosing sensitive information.</description>
    </item>
    
    <item>
      <title>Heartbleed OpenSSL Vulnerability (Indicative)</title>
      <link>/docs/alerts/10034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10034/</guid>
      <description>The TLS and DTLS implementations in OpenSSL 1.0.1 before 1.0.1g do not properly handle Heartbeat Extension packets, which allows remote attackers to obtain sensitive information from process memory via crafted packets that trigger a buffer over-read, potentially disclosing sensitive information.</description>
    </item>
    
    <item>
      <title>Hidden File Found</title>
      <link>/docs/alerts/40035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40035/</guid>
      <description>A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.</description>
    </item>
    
    <item>
      <title>HTTP Only Site</title>
      <link>/docs/alerts/10106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10106/</guid>
      <description>The site is only served under HTTP and not HTTPS.</description>
    </item>
    
    <item>
      <title>HTTP Parameter Override</title>
      <link>/docs/alerts/10026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10026/</guid>
      <description>Unspecified form action: HTTP parameter override attack potentially possible. This is a known problem with Java Servlets but other platforms may also be vulnerable.</description>
    </item>
    
    <item>
      <title>HTTP Parameter Pollution</title>
      <link>/docs/alerts/20014/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20014/</guid>
      <description>HTTP Parameter Pollution (HPP) attacks consist of injecting encoded query string delimiters into other existing parameters. If a web application does not properly sanitize the user input, a malicious user can compromise the logic of the application to perform either client-side or server-side attacks. One consequence of HPP attacks is that the attacker can potentially override existing hard-coded HTTP parameters to modify the behavior of an application, bypass input validation checkpoints, and access and possibly exploit variables that may be out of direct reach.</description>
    </item>
    
    <item>
      <title>HTTP Server Response Header</title>
      <link>/docs/alerts/10036/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10036/</guid>
      <description></description>
    </item>
    
    <item>
      <title>HTTP to HTTPS Insecure Transition in Form Post</title>
      <link>/docs/alerts/10041/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10041/</guid>
      <description>This check looks for insecure HTTP pages that host HTTPS forms. The issue is that an insecure HTTP page can easily be hijacked through MITM and the secure HTTPS form can be replaced or spoofed.</description>
    </item>
    
    <item>
      <title>Httpoxy - Proxy Header Misuse</title>
      <link>/docs/alerts/10107/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10107/</guid>
      <description>The server initiated a proxied request via the proxy specified in the HTTP Proxy header of the request.Httpoxy typically affects code running in CGI or CGI like environments. This may allow attackers to:
Proxy the outgoing HTTP requests made by the web application Direct the server to open outgoing connections to an address and port of their choosing or Tie up server resources by forcing the vulnerable software to use a malicious proxy </description>
    </item>
    
    <item>
      <title>HTTPS Content Available via HTTP</title>
      <link>/docs/alerts/10047/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10047/</guid>
      <description>Content which was initially accessed via HTTPS (i.e.: using SSL/TLS encryption) is also accessible via HTTP (without encryption).</description>
    </item>
    
    <item>
      <title>HTTPS to HTTP Insecure Transition in Form Post</title>
      <link>/docs/alerts/10042/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10042/</guid>
      <description>This check identifies secure HTTPS pages that host insecure HTTP forms. The issue is that a secure page is transitioning to an insecure page when data is uploaded through a form. The user may think they&amp;rsquo;re submitting data to a secure page when in fact they are not.</description>
    </item>
    
    <item>
      <title>Image Exposes Location or Privacy Data</title>
      <link>/docs/alerts/10103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10103/</guid>
      <description>The image was found to contain embedded location information, such as GPS coordinates, or another privacy exposure, such as camera serial number. Depending on the context of the image in the website, this information may expose private details of the users of a site. For example, a site that allows users to upload profile pictures taken in the home may expose the home&amp;rsquo;s address.</description>
    </item>
    
    <item>
      <title>In Page Banner Information Leak</title>
      <link>/docs/alerts/10009/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10009/</guid>
      <description>The server returned a version banner string in the response content. Such information leaks may allow attackers to further target specific issues impacting the product and version in use.</description>
    </item>
    
    <item>
      <title>Information Disclosure - Debug Error Messages</title>
      <link>/docs/alerts/10023/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10023/</guid>
      <description>The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.</description>
    </item>
    
    <item>
      <title>Information Disclosure - Debug Error Messages via WebSocket</title>
      <link>/docs/alerts/110003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/110003/</guid>
      <description>The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.</description>
    </item>
    
    <item>
      <title>Information Disclosure - Sensitive Information in HTTP Referrer Header</title>
      <link>/docs/alerts/10025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10025/</guid>
      <description>The HTTP header may have leaked a potentially sensitive parameter to another domain. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.</description>
    </item>
    
    <item>
      <title>Information Disclosure - Sensitive Information in URL</title>
      <link>/docs/alerts/10024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10024/</guid>
      <description>The request appeared to contain sensitive information leaked in the URL. This can violate PCI and most organizational compliance policies. You can configure the list of strings for this check to add or remove values specific to your environment.</description>
    </item>
    
    <item>
      <title>Information Disclosure - Suspicious Comments</title>
      <link>/docs/alerts/10027/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10027/</guid>
      <description>The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.</description>
    </item>
    
    <item>
      <title>Information Disclosure - Suspicious Comments in XML via WebSocket</title>
      <link>/docs/alerts/110008/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/110008/</guid>
      <description>The response appears to contain suspicious comments which may help an attacker.</description>
    </item>
    
    <item>
      <title>Insecure HTTP Method</title>
      <link>/docs/alerts/90028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90028/</guid>
      <description>The most common methodology for attackers is to first footprint the target&amp;rsquo;s web presence and enumerate as much information as possible. With this information, the attacker may develop an accurate attack scenario, which will effectively exploit a vulnerability in the software type/version being utilized by the target host.</description>
    </item>
    
    <item>
      <title>Insecure JSF ViewState</title>
      <link>/docs/alerts/90001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90001/</guid>
      <description>The response at the following URL contains a ViewState value that has no cryptographic protections.</description>
    </item>
    
    <item>
      <title>Insufficient Site Isolation Against Spectre Vulnerability</title>
      <link>/docs/alerts/90004-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90004-1/</guid>
      <description>Cross-Origin-Resource-Policy header is an opt-in header designed to counter side-channels attacks like Spectre. Resource should be specifically set as shareable amongst different origins.</description>
    </item>
    
    <item>
      <title>Insufficient Site Isolation Against Spectre Vulnerability</title>
      <link>/docs/alerts/90004-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90004-2/</guid>
      <description>Cross-Origin-Embedder-Policy header is a response header that prevents a document from loading any cross-origin resources that don&amp;rsquo;t explicitly grant the document permission (using CORP or CORS).</description>
    </item>
    
    <item>
      <title>Insufficient Site Isolation Against Spectre Vulnerability</title>
      <link>/docs/alerts/90004-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90004-3/</guid>
      <description>Cross-Origin-Opener-Policy header is a response header that allows a site to control if others included documents share the same browsing context. Sharing the same browsing context with untrusted documents might lead to data leak.</description>
    </item>
    
    <item>
      <title>Insufficient Site Isolation Against Spectre Vulnerability</title>
      <link>/docs/alerts/90004/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90004/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Integer Overflow Error</title>
      <link>/docs/alerts/30003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/30003/</guid>
      <description>An integer overflow condition exists when an integer used in a compiled program extends beyond the range limits and has not been properly checked from the input stream.</description>
    </item>
    
    <item>
      <title>Java Serialization Object</title>
      <link>/docs/alerts/90002/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90002/</guid>
      <description>Java Serialization seems to be in use. If not correctly validated, an attacker can send a specially crafted object. This can lead to a dangerous &amp;ldquo;Remote Code Execution&amp;rdquo;. A magic sequence identifying JSO has been detected (Base64: rO0AB, Raw: 0xac, 0xed, 0x00, 0x05).</description>
    </item>
    
    <item>
      <title>JWT Scan Rule</title>
      <link>/docs/alerts/40036/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40036/</guid>
      <description>Scanner for finding vulnerabilities in JWT implementations.</description>
    </item>
    
    <item>
      <title>LDAP Injection</title>
      <link>/docs/alerts/40015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40015/</guid>
      <description>LDAP Injection may be possible. It may be possible for an attacker to bypass authentication controls, and to view and modify arbitrary data in the LDAP directory.</description>
    </item>
    
    <item>
      <title>Log4Shell</title>
      <link>/docs/alerts/40043/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40043/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Log4Shell (CVE-2021-44228)</title>
      <link>/docs/alerts/40043-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40043-1/</guid>
      <description>Apache Log4j2 &amp;lt;=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled.</description>
    </item>
    
    <item>
      <title>Log4Shell (CVE-2021-45046)</title>
      <link>/docs/alerts/40043-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40043-2/</guid>
      <description>It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allow attackers to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments.</description>
    </item>
    
    <item>
      <title>Loosely Scoped Cookie</title>
      <link>/docs/alerts/90033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90033/</guid>
      <description>Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.</description>
    </item>
    
    <item>
      <title>Missing Anti-clickjacking Header</title>
      <link>/docs/alerts/10020-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020-1/</guid>
      <description>The response does not include either Content-Security-Policy with &amp;lsquo;frame-ancestors&amp;rsquo; directive or X-Frame-Options to protect against &amp;lsquo;ClickJacking&amp;rsquo; attacks.</description>
    </item>
    
    <item>
      <title>Modern Web Application</title>
      <link>/docs/alerts/10109/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10109/</guid>
      <description>The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.</description>
    </item>
    
    <item>
      <title>Multiple X-Frame-Options Header Entries</title>
      <link>/docs/alerts/10020-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020-2/</guid>
      <description>X-Frame-Options (XFO) headers were found, a response with multiple XFO header entries may not be predictably treated by all user-agents.</description>
    </item>
    
    <item>
      <title>Non-Storable Content</title>
      <link>/docs/alerts/10049-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10049-1/</guid>
      <description>The response contents are not storable by caching components such as proxy servers. If the response does not contain sensitive, personal or user-specific information, it may benefit from being stored and cached, to improve performance.</description>
    </item>
    
    <item>
      <title>NoSQL Injection - MongoDB</title>
      <link>/docs/alerts/40033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40033/</guid>
      <description>MongoDB query injection may be possible.</description>
    </item>
    
    <item>
      <title>Old Asp.Net Version in Use</title>
      <link>/docs/alerts/10032-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-3/</guid>
      <description>This website uses ASP.NET version 1.0 or 1.1.</description>
    </item>
    
    <item>
      <title>Open Redirect</title>
      <link>/docs/alerts/10028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10028/</guid>
      <description>Open redirects are one of the OWASP 2010 Top Ten vulnerabilities. This check looks at user-supplied input in query string parameters and POST data to identify where open redirects might be possible. Open redirects occur when an application allows user-supplied input (e.g. http://nottrusted.com) to control an offsite redirect. This is generally a pretty accurate way to find where 301 or 302 redirects could be exploited by spammers or phishing attacks.</description>
    </item>
    
    <item>
      <title>Out of Band XSS</title>
      <link>/docs/alerts/40031/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40031/</guid>
      <description>Cross-site Scripting (XSS) is an attack technique that involves echoing attacker-supplied code into a user&amp;rsquo;s browser instance. A browser instance can be a standard web browser client, or a browser object embedded in a software product such as the browser within WinAmp, an RSS reader, or an email client.</description>
    </item>
    
    <item>
      <title>Parameter Tampering</title>
      <link>/docs/alerts/40008/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40008/</guid>
      <description>Parameter manipulation caused an error page or Java stack trace to be displayed. This indicated lack of exception handling and potential areas for further exploit.</description>
    </item>
    
    <item>
      <title>Path Traversal</title>
      <link>/docs/alerts/6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/6/</guid>
      <description>The Path Traversal attack technique allows an attacker access to files, directories, and commands that potentially reside outside the web document root directory. An attacker may manipulate a URL in such a way that the web site will execute or reveal the contents of arbitrary files anywhere on the web server.</description>
    </item>
    
    <item>
      <title>Permissions Policy Header Not Set</title>
      <link>/docs/alerts/10063-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10063-1/</guid>
      <description>Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.</description>
    </item>
    
    <item>
      <title>Permissions Policy Header Not Set</title>
      <link>/docs/alerts/10063/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10063/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Personally Identifiable Information via WebSocket</title>
      <link>/docs/alerts/110005/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/110005/</guid>
      <description>The response contains Personally Identifiable Information, such as CC number. Credit Card type detected: undefined.</description>
    </item>
    
    <item>
      <title>PII Disclosure</title>
      <link>/docs/alerts/10062/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10062/</guid>
      <description>The response contains Personally Identifiable Information, such as CC number, SSN and similar sensitive data.</description>
    </item>
    
    <item>
      <title>Possible Username Enumeration</title>
      <link>/docs/alerts/40023/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40023/</guid>
      <description>It may be possible to enumerate usernames, based on differing HTTP responses when valid and invalid usernames are provided. This would greatly increase the probability of success of password brute-forcing attacks against the system. Note that false positives may sometimes be minimised by increasing the &amp;lsquo;Attack Strength&amp;rsquo; Option in ZAP.</description>
    </item>
    
    <item>
      <title>Potential IP Addresses Found in the Viewstate</title>
      <link>/docs/alerts/10032-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-1/</guid>
      <description>The following potential IP addresses were found being serialized in the viewstate field:</description>
    </item>
    
    <item>
      <title>Private IP Disclosure</title>
      <link>/docs/alerts/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/2/</guid>
      <description>A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.</description>
    </item>
    
    <item>
      <title>Private IP Disclosure via WebSocket</title>
      <link>/docs/alerts/110006/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/110006/</guid>
      <description>A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the incoming WebSocket message. This information might be helpful for further attacks targeting internal systems.</description>
    </item>
    
    <item>
      <title>Proxy Disclosure</title>
      <link>/docs/alerts/40025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40025/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Re-examine Cache-control Directives</title>
      <link>/docs/alerts/10015/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10015/</guid>
      <description>The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.</description>
    </item>
    
    <item>
      <title>Referer Exposes Session ID</title>
      <link>/docs/alerts/3-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/3-3/</guid>
      <description>A hyperlink pointing to another host name was found. As session ID URL rewrite is used, it may be disclosed in referer header to external hosts.</description>
    </item>
    
    <item>
      <title>Relative Path Confusion</title>
      <link>/docs/alerts/10051/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10051/</guid>
      <description>The web server is configured to serve responses to ambiguous URLs in a manner that is likely to lead to confusion about the correct &amp;ldquo;relative path&amp;rdquo; for the URL. Resources (CSS, images, etc.) are also specified in the page response using relative, rather than absolute URLs. In an attack, if the web browser parses the &amp;ldquo;cross-content&amp;rdquo; response in a permissive manner, or can be tricked into permissively parsing the &amp;ldquo;cross-content&amp;rdquo; response, using techniques such as framing, then the web browser may be fooled into interpreting HTML as CSS (or other content types), leading to an XSS vulnerability.</description>
    </item>
    
    <item>
      <title>Remote Code Execution - CVE-2012-1823</title>
      <link>/docs/alerts/20018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20018/</guid>
      <description>Improper input handling is one of the most common weaknesses identified across applications today. Poorly handled input is a leading cause behind critical vulnerabilities that exist in systems and applications.
Generally, the term input handing is used to describe functions like validation, sanitization, filtering, encoding and/or decoding of input data.</description>
    </item>
    
    <item>
      <title>Remote Code Execution - Shell Shock</title>
      <link>/docs/alerts/10048/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10048/</guid>
      <description>The server is running a version of the Bash shell that allows remote attackers to execute arbitrary code</description>
    </item>
    
    <item>
      <title>Remote File Inclusion</title>
      <link>/docs/alerts/7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/7/</guid>
      <description>Remote File Include (RFI) is an attack technique used to exploit &amp;ldquo;dynamic file include&amp;rdquo; mechanisms in web applications. When web applications take user input (URL, parameter value, etc.) and pass them into file include commands, the web application might be tricked into including remote files with malicious code.</description>
    </item>
    
    <item>
      <title>Remote OS Command Injection</title>
      <link>/docs/alerts/90020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90020/</guid>
      <description>Attack technique used for unauthorized execution of operating system commands. This attack is possible when an application accepts untrusted input to build operating system commands in an insecure manner involving improper data sanitization, and/or improper calling of external programs.</description>
    </item>
    
    <item>
      <title>Retrieved from Cache</title>
      <link>/docs/alerts/10050/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10050/</guid>
      <description>The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment.</description>
    </item>
    
    <item>
      <title>Reverse Tabnabbing</title>
      <link>/docs/alerts/10108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10108/</guid>
      <description>At least one link on this page is vulnerable to Reverse tabnabbing as it uses a target attribute without using both of the &amp;ldquo;noopener&amp;rdquo; and &amp;ldquo;noreferrer&amp;rdquo; keywords in the &amp;ldquo;rel&amp;rdquo; attribute, which allows the target page to take control of this page.</description>
    </item>
    
    <item>
      <title>Secure Pages Include Mixed Content</title>
      <link>/docs/alerts/10040/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10040/</guid>
      <description>The page includes mixed content, that is content accessed via HTTP instead of HTTPS.</description>
    </item>
    
    <item>
      <title>Server Leaks Information via &#39;X-Powered-By&#39; HTTP Response Header Field(s)</title>
      <link>/docs/alerts/10037/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10037/</guid>
      <description>The web/application server is leaking information via one or more &amp;ldquo;X-Powered-By&amp;rdquo; HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.</description>
    </item>
    
    <item>
      <title>Server Leaks its Webserver Application via &#39;Server&#39; HTTP Response Header Field</title>
      <link>/docs/alerts/10036-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10036-1/</guid>
      <description>The web/application server is leaking the application it uses as a webserver via the &amp;ldquo;Server&amp;rdquo; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to. This information alone, i.e. without a version string, is not very dangerous for the security of a server, nevertheless this information in the response header field is almost always useless and thus just an obsolete attacking vector.</description>
    </item>
    
    <item>
      <title>Server Leaks Version Information via &#39;Server&#39; HTTP Response Header Field</title>
      <link>/docs/alerts/10036-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10036-2/</guid>
      <description>The web/application server is leaking version information via the &amp;ldquo;Server&amp;rdquo; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.</description>
    </item>
    
    <item>
      <title>Server Side Code Injection</title>
      <link>/docs/alerts/90019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90019/</guid>
      <description>A code injection may be possible including custom code that will be evaluated by the scripting engine</description>
    </item>
    
    <item>
      <title>Server Side Include</title>
      <link>/docs/alerts/40009/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40009/</guid>
      <description>Certain parameters may cause Server Side Include commands to be executed. This may allow database connection or arbitrary code to be executed.</description>
    </item>
    
    <item>
      <title>Server Side Request Forgery</title>
      <link>/docs/alerts/40046/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40046/</guid>
      <description>The web server receives a remote address and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</description>
    </item>
    
    <item>
      <title>Server Side Template Injection</title>
      <link>/docs/alerts/90035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90035/</guid>
      <description>When the user input is inserted in the template instead of being used as argument in rendering is evaluated by the template engine. Depending on the template engine it can lead to remote code execution.</description>
    </item>
    
    <item>
      <title>Server Side Template Injection (Blind)</title>
      <link>/docs/alerts/90036/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90036/</guid>
      <description>When the user input is inserted in the template instead of being used as argument in rendering is evaluated by the template engine. Depending on the template engine it can lead to remote code execution.</description>
    </item>
    
    <item>
      <title>Session Fixation</title>
      <link>/docs/alerts/40013/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40013/</guid>
      <description>Session Fixation may be possible. If this issue occurs with a login URL (where the user authenticates themselves to the application), then the URL may be given by an attacker, along with a fixed session id, to a victim, in order to later assume the identity of the victim using the given session id.</description>
    </item>
    
    <item>
      <title>Session ID in URL Rewrite</title>
      <link>/docs/alerts/3-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/3-1/</guid>
      <description>URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.</description>
    </item>
    
    <item>
      <title>Session ID in URL Rewrite</title>
      <link>/docs/alerts/3-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/3-2/</guid>
      <description>URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.</description>
    </item>
    
    <item>
      <title>Session ID in URL Rewrite</title>
      <link>/docs/alerts/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SOAP Action Spoofing</title>
      <link>/docs/alerts/90026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90026/</guid>
      <description>An unintended SOAP operation was executed by the server.</description>
    </item>
    
    <item>
      <title>SOAP XML Injection</title>
      <link>/docs/alerts/90029/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90029/</guid>
      <description>Some XML injected code has been interpreted by the server.</description>
    </item>
    
    <item>
      <title>Source Code Disclosure</title>
      <link>/docs/alerts/10099/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10099/</guid>
      <description>Application Source Code was disclosed by the web server</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - /WEB-INF folder</title>
      <link>/docs/alerts/10045/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10045/</guid>
      <description>Predictable Resource Location is an attack technique used to uncover hidden web site content and functionality. By making educated guesses via brute forcing an attacker can guess file and directory names not intended for public viewing. Brute forcing filenames is easy because files/paths often have common naming convention and reside in standard locations.</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - CVE-2012-1823</title>
      <link>/docs/alerts/20017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20017/</guid>
      <description>Improper input handling is one of the most common weaknesses identified across applications today. Poorly handled input is a leading cause behind critical vulnerabilities that exist in systems and applications.
Generally, the term input handing is used to describe functions like validation, sanitization, filtering, encoding and/or decoding of input data.</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - File Inclusion</title>
      <link>/docs/alerts/43/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/43/</guid>
      <description>The Path Traversal attack technique allows an attacker access to files, directories, and commands that potentially reside outside the web document root directory. An attacker may manipulate a URL in such a way that the web site will execute or reveal the contents of arbitrary files anywhere on the web server.</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - Git </title>
      <link>/docs/alerts/41/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/41/</guid>
      <description>The source code for the current page was disclosed by the web server</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - SVN</title>
      <link>/docs/alerts/42/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/42/</guid>
      <description>The source code for the current page was disclosed by the web server</description>
    </item>
    
    <item>
      <title>Split Viewstate in Use</title>
      <link>/docs/alerts/10032-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-6/</guid>
      <description>This website uses ASP.NET&amp;rsquo;s Viewstate and its value is split into several chunks.</description>
    </item>
    
    <item>
      <title>Spring Actuator Information Leak</title>
      <link>/docs/alerts/40042/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40042/</guid>
      <description>Spring Actuator for Health is enabled and may reveal sensitive information about this application. Spring Actuators can be used for real monitoring purposes, but should be used with caution as to not expose too much information about the application or the infrastructure running it.</description>
    </item>
    
    <item>
      <title>Spring4Shell</title>
      <link>/docs/alerts/40045/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40045/</guid>
      <description>The application appears to be vulnerable to CVE-2022-22965 (otherwise known as Spring4Shell) - remote code execution (RCE) via data binding.</description>
    </item>
    
    <item>
      <title>SQL Injection</title>
      <link>/docs/alerts/40018/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40018/</guid>
      <description>SQL injection may be possible</description>
    </item>
    
    <item>
      <title>SQL Injection - Hypersonic SQL</title>
      <link>/docs/alerts/40020/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40020/</guid>
      <description>SQL injection may be possible</description>
    </item>
    
    <item>
      <title>SQL Injection - MsSQL</title>
      <link>/docs/alerts/40027/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40027/</guid>
      <description>SQL injection may be possible</description>
    </item>
    
    <item>
      <title>SQL Injection - MySQL</title>
      <link>/docs/alerts/40019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40019/</guid>
      <description>SQL injection may be possible</description>
    </item>
    
    <item>
      <title>SQL Injection - Oracle</title>
      <link>/docs/alerts/40021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40021/</guid>
      <description>SQL injection may be possible</description>
    </item>
    
    <item>
      <title>SQL Injection - PostgreSQL</title>
      <link>/docs/alerts/40022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40022/</guid>
      <description>SQL injection may be possible</description>
    </item>
    
    <item>
      <title>SQL Injection - SQLite</title>
      <link>/docs/alerts/40024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40024/</guid>
      <description>SQL injection may be possible</description>
    </item>
    
    <item>
      <title>Storable and Cacheable Content</title>
      <link>/docs/alerts/10049-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10049-3/</guid>
      <description>The response contents are storable by caching components such as proxy servers, and may be retrieved directly from the cache, rather than from the origin server by the caching servers, in response to similar requests from other users. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked.</description>
    </item>
    
    <item>
      <title>Storable but Non-Cacheable Content</title>
      <link>/docs/alerts/10049-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10049-2/</guid>
      <description>The response contents are storable by caching components such as proxy servers, but will not be retrieved directly from the cache, without validating the request upstream, in response to similar requests from other users.</description>
    </item>
    
    <item>
      <title>Strict-Transport-Security Header</title>
      <link>/docs/alerts/10035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10035/</guid>
      <description>HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.</description>
    </item>
    
    <item>
      <title>Sub Resource Integrity Attribute Missing</title>
      <link>/docs/alerts/90003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90003/</guid>
      <description>The integrity attribute is missing on a script or link tag served by an external server. The integrity tag prevents an attacker who have gained access to this server from injecting a malicious content.</description>
    </item>
    
    <item>
      <title>Text4shell (CVE-2022-42889)</title>
      <link>/docs/alerts/40047/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40047/</guid>
      <description>Apache Commons Text prior to 1.10.0 allows RCE when applied to untrusted input due to insecure interpolation defaults.Apache Commons Text performs variable interpolation, allowing properties to be dynamically evaluated and expanded.The application has been shown to initial contact with remote servers via variable interpolation and may well be vulnerable to Remote Code Execution (RCE).</description>
    </item>
    
    <item>
      <title>Timestamp Disclosure</title>
      <link>/docs/alerts/10096/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10096/</guid>
      <description>A timestamp was disclosed by the application/web server</description>
    </item>
    
    <item>
      <title>Trace.axd Information Leak</title>
      <link>/docs/alerts/40029/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40029/</guid>
      <description>The ASP.NET Trace Viewer (trace.axd) was found to be available. This component can leak a significant amount of valuable information.</description>
    </item>
    
    <item>
      <title>Use of SAML</title>
      <link>/docs/alerts/10070/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10070/</guid>
      <description>Unavailable</description>
    </item>
    
    <item>
      <title>User Agent Fuzzer</title>
      <link>/docs/alerts/10104/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10104/</guid>
      <description>Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.</description>
    </item>
    
    <item>
      <title>User Controllable Charset</title>
      <link>/docs/alerts/10030/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10030/</guid>
      <description>This check looks at user-supplied input in query string parameters and POST data to identify where Content-Type or meta tag charset declarations might be user-controlled. Such charset declarations should always be declared by the application. If an attacker can control the response charset, they could manipulate the HTML to perform XSS or other attacks.</description>
    </item>
    
    <item>
      <title>User Controllable HTML Element Attribute (Potential XSS)</title>
      <link>/docs/alerts/10031/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10031/</guid>
      <description>This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.</description>
    </item>
    
    <item>
      <title>User Controllable JavaScript Event (XSS)</title>
      <link>/docs/alerts/10043/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10043/</guid>
      <description>This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.</description>
    </item>
    
    <item>
      <title>Username Hash Found</title>
      <link>/docs/alerts/10057/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10057/</guid>
      <description>A hash of a username (admin) was found in the response. This may indicate that the application is subject to an Insecure Direct Object Reference (IDOR) vulnerability. Manual testing will be required to see if this discovery can be abused.</description>
    </item>
    
    <item>
      <title>Username Hash Found in WebSocket message</title>
      <link>/docs/alerts/110007/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/110007/</guid>
      <description>A Example hash of {Example / context: Example} was found in incoming WebSocket message. This may indicate that the application is subject to an Insecure Direct Object Reference (IDOR) vulnerability. Manual testing will be required to see if this discovery can be abused.</description>
    </item>
    
    <item>
      <title>Viewstate</title>
      <link>/docs/alerts/10032/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Viewstate without MAC Signature (Sure)</title>
      <link>/docs/alerts/10032-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-5/</guid>
      <description>This website uses ASP.NET&amp;rsquo;s Viewstate but without any MAC.</description>
    </item>
    
    <item>
      <title>Viewstate without MAC Signature (Unsure)</title>
      <link>/docs/alerts/10032-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-4/</guid>
      <description>This website uses ASP.NET&amp;rsquo;s Viewstate but maybe without any MAC.</description>
    </item>
    
    <item>
      <title>Vulnerable JS Library</title>
      <link>/docs/alerts/10003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10003/</guid>
      <description>The identified library ExampleLibrary, version x.y.z is vulnerable.</description>
    </item>
    
    <item>
      <title>Weak Authentication Method</title>
      <link>/docs/alerts/10105/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10105/</guid>
      <description>HTTP basic or digest authentication has been used over an unsecured connection. The credentials can be read and then reused by someone with access to the network.</description>
    </item>
    
    <item>
      <title>Web Cache Deception</title>
      <link>/docs/alerts/40039/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40039/</guid>
      <description>Web cache deception may be possible. It may be possible for unauthorised user to view sensitive data on this page.</description>
    </item>
    
    <item>
      <title>WSDL File Detection</title>
      <link>/docs/alerts/90030/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90030/</guid>
      <description>A WSDL File has been detected.</description>
    </item>
    
    <item>
      <title>X-AspNet-Version Response Header</title>
      <link>/docs/alerts/10061/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10061/</guid>
      <description>Server leaks information via &amp;ldquo;X-AspNet-Version&amp;rdquo;/&amp;ldquo;X-AspNetMvc-Version&amp;rdquo; HTTP response header field(s).</description>
    </item>
    
    <item>
      <title>X-Backend-Server Header Information Leak</title>
      <link>/docs/alerts/10039/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10039/</guid>
      <description>The server is leaking information pertaining to backend systems (such as hostnames or IP addresses). Armed with this information an attacker may be able to attack other systems or more directly/efficiently attack those systems.</description>
    </item>
    
    <item>
      <title>X-ChromeLogger-Data (XCOLD) Header Information Leak</title>
      <link>/docs/alerts/10052/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10052/</guid>
      <description>The server is leaking information through the X-ChromeLogger-Data (or X-ChromePhp-Data) response header. The content of such headers can be customized by the developer, however it is not uncommon to find: server file system locations, vhost declarations, etc.</description>
    </item>
    
    <item>
      <title>X-Content-Type-Options Header Missing</title>
      <link>/docs/alerts/10021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10021/</guid>
      <description>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &amp;rsquo;nosniff&amp;rsquo;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</description>
    </item>
    
    <item>
      <title>X-Debug-Token Information Leak</title>
      <link>/docs/alerts/10056/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10056/</guid>
      <description>The response contained an X-Debug-Token or X-Debug-Token-Link header. This indicates that Symfony&amp;rsquo;s Profiler may be in use and exposing sensitive data.</description>
    </item>
    
    <item>
      <title>X-Frame-Options Defined via META (Non-compliant with Spec)</title>
      <link>/docs/alerts/10020-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020-3/</guid>
      <description>An X-Frame-Options (XFO) META tag was found, defining XFO via a META tag is explicitly not supported by the spec (RFC 7034).</description>
    </item>
    
    <item>
      <title>X-Frame-Options Setting Malformed</title>
      <link>/docs/alerts/10020-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020-4/</guid>
      <description>An X-Frame-Options header was present in the response but the value was not correctly set.</description>
    </item>
    
    <item>
      <title>XML External Entity Attack</title>
      <link>/docs/alerts/90023/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90023/</guid>
      <description>This technique takes advantage of a feature of XML to build documents dynamically at the time of processing. An XML message can either provide data explicitly or by pointing to an URI where the data exists. In the attack technique, external entities may replace the entity value with malicious data, alternate referrals or may compromise the security of the data the server/XML application has access to.</description>
    </item>
    
    <item>
      <title>XPath Injection</title>
      <link>/docs/alerts/90021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90021/</guid>
      <description>XPath Injection is an attack technique used to exploit applications that construct XPath (XML Path Language) queries from user-supplied input to query or navigate XML documents. It can be used directly by an application to query an XML document, as part of a larger operation such as applying an XSLT transformation to an XML document, or applying an XQuery to an XML document.</description>
    </item>
    
    <item>
      <title>XSLT Injection</title>
      <link>/docs/alerts/90017/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90017/</guid>
      <description>Injection using XSL transformations may be possible, and may allow an attacker to read system information, read and write files, or execute arbitrary code.</description>
    </item>
    
  </channel>
</rss>
