<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pentesting on ZAP</title>
    <link>/successtags/pentesting/</link>
    <description>Recent content in Pentesting on ZAP</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Aug 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="/successtags/pentesting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>we45 and AppSecEngineer</title>
      <link>/success/we45/</link>
      <pubDate>Wed, 11 Aug 2021 00:00:00 +0000</pubDate>
      <guid>/success/we45/</guid>
      <description>&lt;p&gt;We at we45 and our training venture, AppSecEngineer use and train on ZAP extensively. We strongly believe ZAP to be the most programmable DAST tool in its class, regardless of commercial or OSS alternatives.&lt;/p&gt;&#xA;&lt;p&gt;One of the things we do with our clients is to implement continuous DAST scanning as part of their DevSecOps initiatives. Many of our clients run a bevy of automated scans on a periodic basis, triggered through CI tooling with ZAP as the tool. For some of those that have End-to-End Test Automation Scripts with Selenium, Cypress, etc, we set up ZAP to be able to run authenticated, completely automated scanning, which is something we find unique in the DAST space&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
