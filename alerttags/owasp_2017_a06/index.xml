<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OWASP_2017_A06 on OWASP ZAP</title>
    <link>/alerttags/owasp_2017_a06/</link>
    <description>Recent content in OWASP_2017_A06 on OWASP ZAP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/alerttags/owasp_2017_a06/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>.env Information Leak</title>
      <link>/docs/alerts/40034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40034/</guid>
      <description>One or more .env files seems to have been located on the server. These files often expose infrastructure or administrative account credentials, API or APP keys, or other sensitive configuration information.</description>
    </item>
    
    <item>
      <title>.htaccess Information Leak</title>
      <link>/docs/alerts/40032/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40032/</guid>
      <description>htaccess files can be used to alter the configuration of the Apache Web Server software to enable/disable additional functionality and features that the Apache Web Server software has to offer.</description>
    </item>
    
    <item>
      <title>Anti-CSRF Tokens Check</title>
      <link>/docs/alerts/20012/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20012/</guid>
      <description>A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way.</description>
    </item>
    
    <item>
      <title>Application Error Disclosure</title>
      <link>/docs/alerts/90022/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90022/</guid>
      <description>This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.</description>
    </item>
    
    <item>
      <title>Cloud Metadata Potentially Exposed</title>
      <link>/docs/alerts/90034/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90034/</guid>
      <description>The Cloud Metadata Attack attempts to abuse a misconfigured NGINX server in order to access the instance metadata maintained by cloud service providers such as AWS, GCP and Azure. All of these providers provide metadata via an internal unroutable IP address &amp;lsquo;169.254.169.254&amp;rsquo; - this can be exposed by incorrectly configured NGINX servers and accessed by using this IP address in the Host header field.</description>
    </item>
    
    <item>
      <title>Content Security Policy (CSP) Header Not Set</title>
      <link>/docs/alerts/10038/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10038/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.</description>
    </item>
    
    <item>
      <title>Content-Type Header Missing</title>
      <link>/docs/alerts/10019/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10019/</guid>
      <description>The Content-Type header was either missing or empty.</description>
    </item>
    
    <item>
      <title>Cookie No HttpOnly Flag</title>
      <link>/docs/alerts/10010/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10010/</guid>
      <description>A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.</description>
    </item>
    
    <item>
      <title>Cookie Slack Detector</title>
      <link>/docs/alerts/90027/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90027/</guid>
      <description>Repeated GET requests: drop a different cookie each time, followed by normal request with all cookies to stabilize session, compare responses against original baseline GET. This can reveal areas where cookie based authentication/attributes are not actually enforced.</description>
    </item>
    
    <item>
      <title>Cookie Without Secure Flag</title>
      <link>/docs/alerts/10011/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10011/</guid>
      <description>A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.</description>
    </item>
    
    <item>
      <title>Cross-Domain Misconfiguration</title>
      <link>/docs/alerts/20016/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/20016/</guid>
      <description></description>
    </item>
    
    <item>
      <title>CSP: Header &amp; Meta</title>
      <link>/docs/alerts/10055-12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-12/</guid>
      <description>The message contained both CSP specified via header and via Meta tag. It was not possible to union these policies in order to perform an analysis. Therefore, they have been evaluated individually.</description>
    </item>
    
    <item>
      <title>CSP: Malformed Policy (Non-ASCII)</title>
      <link>/docs/alerts/10055-9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-9/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: Meta Policy Invalid Directive</title>
      <link>/docs/alerts/10055-11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-11/</guid>
      <description>The policy specified via meta element contains either or both the sandbox or frame-ancestors directive, which are not permitted inside meta CSP definitions.</description>
    </item>
    
    <item>
      <title>CSP: Notices</title>
      <link>/docs/alerts/10055-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-3/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: script-src unsafe-eval</title>
      <link>/docs/alerts/10055-10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-10/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: script-src unsafe-hashes</title>
      <link>/docs/alerts/10055-7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-7/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: script-src unsafe-inline</title>
      <link>/docs/alerts/10055-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-5/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: style-src unsafe-hashes</title>
      <link>/docs/alerts/10055-8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-8/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: style-src unsafe-inline</title>
      <link>/docs/alerts/10055-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-6/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: Wildcard Directive</title>
      <link>/docs/alerts/10055-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-4/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: X-Content-Security-Policy</title>
      <link>/docs/alerts/10055-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-1/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>CSP: X-WebKit-CSP</title>
      <link>/docs/alerts/10055-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10055-2/</guid>
      <description>Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware.</description>
    </item>
    
    <item>
      <title>Directory Browsing</title>
      <link>/docs/alerts/10033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10033/</guid>
      <description>It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files , backup source files, etc., which be accessed to reveal sensitive information.</description>
    </item>
    
    <item>
      <title>ELMAH Information Leak</title>
      <link>/docs/alerts/40028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40028/</guid>
      <description>The Error Logging Modules and Handlers (ELMAH [elmah.axd]) HTTP Module was found to be available. This module can leak a significant amount of valuable information.</description>
    </item>
    
    <item>
      <title>Emails Found in the Viewstate</title>
      <link>/docs/alerts/10032-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-2/</guid>
      <description>The following emails were found being serialized in the viewstate field:</description>
    </item>
    
    <item>
      <title>Generic Padding Oracle</title>
      <link>/docs/alerts/90024/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90024/</guid>
      <description>By manipulating the padding on an encrypted string, an attacker is able to generate an error message that indicates a likely &amp;lsquo;padding oracle&amp;rsquo; vulnerability. Such a vulnerability can affect any application or framework that uses encryption improperly, such as some versions of ASP.net, Java Server Faces, and Mono. An attacker may exploit this issue to decrypt data and recover encryption keys, potentially viewing and modifying confidential data.</description>
    </item>
    
    <item>
      <title>GET for POST</title>
      <link>/docs/alerts/10058/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10058/</guid>
      <description>A request that was originally observed as a POST was also accepted as a GET. This issue does not represent a security weakness unto itself, however, it may facilitate simplification of other attacks. For example if the original POST is subject to Cross-Site Scripting (XSS), then this finding may indicate that a simplified (GET based) XSS may also be possible.</description>
    </item>
    
    <item>
      <title>Hidden File Found</title>
      <link>/docs/alerts/40035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40035/</guid>
      <description>A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.</description>
    </item>
    
    <item>
      <title>HTTP Only Site</title>
      <link>/docs/alerts/10106/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10106/</guid>
      <description>The site is only served under HTTP and not HTTPS.</description>
    </item>
    
    <item>
      <title>HTTP Parameter Override</title>
      <link>/docs/alerts/10026/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10026/</guid>
      <description>Unspecified form action: HTTP parameter override attack potentially possible. This is a known problem with Java Servlets but other platforms may also be vulnerable.</description>
    </item>
    
    <item>
      <title>HTTP to HTTPS Insecure Transition in Form Post</title>
      <link>/docs/alerts/10041/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10041/</guid>
      <description>This check looks for insecure HTTP pages that host HTTPS forms. The issue is that an insecure HTTP page can easily be hijacked through MITM and the secure HTTPS form can be replaced or spoofed.</description>
    </item>
    
    <item>
      <title>HTTPS Content Available via HTTP</title>
      <link>/docs/alerts/10047/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10047/</guid>
      <description>Content which was initially accessed via HTTPS (i.e.: using SSL/TLS encryption) is also accessible via HTTP (without encryption).</description>
    </item>
    
    <item>
      <title>HTTPS to HTTP Insecure Transition in Form Post</title>
      <link>/docs/alerts/10042/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10042/</guid>
      <description>This check identifies secure HTTPS pages that host insecure HTTP forms. The issue is that a secure page is transitioning to an insecure page when data is uploaded through a form. The user may think they&amp;rsquo;re submitting data to a secure page when in fact they are not.</description>
    </item>
    
    <item>
      <title>Image Exposes Location or Privacy Data</title>
      <link>/docs/alerts/10103/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10103/</guid>
      <description>The image was found to contain embedded location information, such as GPS coordinates, or another privacy exposure, such as camera serial number. Depending on the context of the image in the website, this information may expose private details of the users of a site. For example, a site that allows users to upload profile pictures taken in the home may expose the home&amp;rsquo;s address.</description>
    </item>
    
    <item>
      <title>In Page Banner Information Leak</title>
      <link>/docs/alerts/10009/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10009/</guid>
      <description>The server returned a version banner string in the response content. Such information leaks may allow attackers to further target specific issues impacting the product and version in use.</description>
    </item>
    
    <item>
      <title>Insecure HTTP Method</title>
      <link>/docs/alerts/90028/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90028/</guid>
      <description>The most common methodology for attackers is to first footprint the target&amp;rsquo;s web presence and enumerate as much information as possible. With this information, the attacker may develop an accurate attack scenario, which will effectively exploit a vulnerability in the software type/version being utilized by the target host.</description>
    </item>
    
    <item>
      <title>Insecure JSF ViewState</title>
      <link>/docs/alerts/90001/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90001/</guid>
      <description>The response at the following URL contains a ViewState value that has no cryptographic protections.</description>
    </item>
    
    <item>
      <title>Loosely Scoped Cookie</title>
      <link>/docs/alerts/90033/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90033/</guid>
      <description>Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.</description>
    </item>
    
    <item>
      <title>Missing Anti-clickjacking Header</title>
      <link>/docs/alerts/10020-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020-1/</guid>
      <description>The response does not include either Content-Security-Policy with &amp;lsquo;frame-ancestors&amp;rsquo; directive or X-Frame-Options to protect against &amp;lsquo;ClickJacking&amp;rsquo; attacks.</description>
    </item>
    
    <item>
      <title>Multiple X-Frame-Options Header Entries</title>
      <link>/docs/alerts/10020-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020-2/</guid>
      <description>X-Frame-Options (XFO) headers were found, a response with multiple XFO header entries may not be predictably treated by all user-agents.</description>
    </item>
    
    <item>
      <title>Old Asp.Net Version in Use</title>
      <link>/docs/alerts/10032-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-3/</guid>
      <description>This website uses ASP.NET version 1.0 or 1.1.</description>
    </item>
    
    <item>
      <title>Possible Username Enumeration</title>
      <link>/docs/alerts/40023/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40023/</guid>
      <description>It may be possible to enumerate usernames, based on differing HTTP responses when valid and invalid usernames are provided. This would greatly increase the probability of success of password brute-forcing attacks against the system. Note that false positives may sometimes be minimised by increasing the &amp;lsquo;Attack Strength&amp;rsquo; Option in ZAP.</description>
    </item>
    
    <item>
      <title>Potential IP Addresses Found in the Viewstate</title>
      <link>/docs/alerts/10032-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-1/</guid>
      <description>The following potential IP addresses were found being serialized in the viewstate field:</description>
    </item>
    
    <item>
      <title>Proxy Disclosure</title>
      <link>/docs/alerts/40025/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40025/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Relative Path Confusion</title>
      <link>/docs/alerts/10051/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10051/</guid>
      <description>The web server is configured to serve responses to ambiguous URLs in a manner that is likely to lead to confusion about the correct &amp;ldquo;relative path&amp;rdquo; for the URL. Resources (CSS, images, etc.) are also specified in the page response using relative, rather than absolute URLs. In an attack, if the web browser parses the &amp;ldquo;cross-content&amp;rdquo; response in a permissive manner, or can be tricked into permissively parsing the &amp;ldquo;cross-content&amp;rdquo; response, using techniques such as framing, then the web browser may be fooled into interpreting HTML as CSS (or other content types), leading to an XSS vulnerability.</description>
    </item>
    
    <item>
      <title>Reverse Tabnabbing</title>
      <link>/docs/alerts/10108/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10108/</guid>
      <description>At least one link on this page is vulnerable to Reverse tabnabbing as it uses a target attribute without using both of the &amp;ldquo;noopener&amp;rdquo; and &amp;ldquo;noreferrer&amp;rdquo; keywords in the &amp;ldquo;rel&amp;rdquo; attribute, which allows the target page to take control of this page.</description>
    </item>
    
    <item>
      <title>Secure Pages Include Mixed Content</title>
      <link>/docs/alerts/10040/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10040/</guid>
      <description>The page includes mixed content, that is content accessed via HTTP instead of HTTPS.</description>
    </item>
    
    <item>
      <title>Server Leaks its Webserver Application via &#39;Server&#39; HTTP Response Header Field</title>
      <link>/docs/alerts/10036-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10036-1/</guid>
      <description>The web/application server is leaking the application it uses as a webserver via the &amp;ldquo;Server&amp;rdquo; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to. This information alone, i.e. without a version string, is not very dangerous for the security of a server, nevertheless this information in the response header field is almost always useless and thus just an obsolete attacking vector.</description>
    </item>
    
    <item>
      <title>Server Leaks Version Information via &#39;Server&#39; HTTP Response Header Field</title>
      <link>/docs/alerts/10036-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10036-2/</guid>
      <description>The web/application server is leaking version information via the &amp;ldquo;Server&amp;rdquo; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.</description>
    </item>
    
    <item>
      <title>Source Code Disclosure</title>
      <link>/docs/alerts/10099/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10099/</guid>
      <description>Application Source Code was disclosed by the web server</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - /WEB-INF folder</title>
      <link>/docs/alerts/10045/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10045/</guid>
      <description>Predictable Resource Location is an attack technique used to uncover hidden web site content and functionality. By making educated guesses via brute forcing an attacker can guess file and directory names not intended for public viewing. Brute forcing filenames is easy because files/paths often have common naming convention and reside in standard locations.</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - File Inclusion</title>
      <link>/docs/alerts/43/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/43/</guid>
      <description>The Path Traversal attack technique allows an attacker access to files, directories, and commands that potentially reside outside the web document root directory. An attacker may manipulate a URL in such a way that the web site will execute or reveal the contents of arbitrary files anywhere on the web server.</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - Git </title>
      <link>/docs/alerts/41/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/41/</guid>
      <description>The source code for the current page was disclosed by the web server</description>
    </item>
    
    <item>
      <title>Source Code Disclosure - SVN</title>
      <link>/docs/alerts/42/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/42/</guid>
      <description>The source code for the current page was disclosed by the web server</description>
    </item>
    
    <item>
      <title>Split Viewstate in Use</title>
      <link>/docs/alerts/10032-6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-6/</guid>
      <description>This website uses ASP.NET&amp;rsquo;s Viewstate and its value is split into several chunks.</description>
    </item>
    
    <item>
      <title>Strict-Transport-Security Header</title>
      <link>/docs/alerts/10035/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10035/</guid>
      <description>HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.</description>
    </item>
    
    <item>
      <title>Sub Resource Integrity Attribute Missing</title>
      <link>/docs/alerts/90003/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90003/</guid>
      <description>The integrity attribute is missing on a script or link tag served by an external server. The integrity tag prevents an attacker who have gained access to this server from injecting a malicious content.</description>
    </item>
    
    <item>
      <title>Trace.axd Information Leak</title>
      <link>/docs/alerts/40029/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40029/</guid>
      <description>The ASP.NET Trace Viewer (trace.axd) was found to be available. This component can leak a significant amount of valuable information.</description>
    </item>
    
    <item>
      <title>Viewstate without MAC Signature (Sure)</title>
      <link>/docs/alerts/10032-5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-5/</guid>
      <description>This website uses ASP.NET&amp;rsquo;s Viewstate but without any MAC.</description>
    </item>
    
    <item>
      <title>Viewstate without MAC Signature (Unsure)</title>
      <link>/docs/alerts/10032-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10032-4/</guid>
      <description>This website uses ASP.NET&amp;rsquo;s Viewstate but maybe without any MAC.</description>
    </item>
    
    <item>
      <title>Web Cache Deception</title>
      <link>/docs/alerts/40039/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/40039/</guid>
      <description>Web cache deception may be possible. It may be possible for unauthorised user to view sensitive data on this page.</description>
    </item>
    
    <item>
      <title>WSDL File Detection</title>
      <link>/docs/alerts/90030/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/90030/</guid>
      <description>A WSDL File has been detected.</description>
    </item>
    
    <item>
      <title>X-AspNet-Version Response Header</title>
      <link>/docs/alerts/10061/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10061/</guid>
      <description>Server leaks information via &amp;ldquo;X-AspNet-Version&amp;rdquo;/&amp;ldquo;X-AspNetMvc-Version&amp;rdquo; HTTP response header field(s).</description>
    </item>
    
    <item>
      <title>X-Backend-Server Header Information Leak</title>
      <link>/docs/alerts/10039/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10039/</guid>
      <description>The server is leaking information pertaining to backend systems (such as hostnames or IP addresses). Armed with this information an attacker may be able to attack other systems or more directly/efficiently attack those systems.</description>
    </item>
    
    <item>
      <title>X-Content-Type-Options Header Missing</title>
      <link>/docs/alerts/10021/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10021/</guid>
      <description>The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &amp;rsquo;nosniff&amp;rsquo;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.</description>
    </item>
    
    <item>
      <title>X-Frame-Options Defined via META (Non-compliant with Spec)</title>
      <link>/docs/alerts/10020-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020-3/</guid>
      <description>An X-Frame-Options (XFO) META tag was found, defining XFO via a META tag is explicitly not supported by the spec (RFC 7034).</description>
    </item>
    
    <item>
      <title>X-Frame-Options Setting Malformed</title>
      <link>/docs/alerts/10020-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/alerts/10020-4/</guid>
      <description>An X-Frame-Options header was present in the response but the value was not correctly set.</description>
    </item>
    
  </channel>
</rss>
